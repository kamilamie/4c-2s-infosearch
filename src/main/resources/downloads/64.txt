Data exchange - Wikipedia Data exchange From Wikipedia, the free encyclopedia Jump to navigation Jump to search Data management process Data exchange is the process of taking data structured under a source schema and transforming it into data structured under a target schema, so that the target data is an accurate representation of the source data.[1] Data exchange allows data to be shared between different computer programs. It is similar to the related concept of data integration except that data is actually restructured (with possible loss of content) in data exchange. There may be no way to transform an instance given all of the constraints. Conversely, there may be numerous ways to transform the instance (possibly infinitely many), in which case a "best" choice of solutions has to be identified and justified. Contents 1 Single-domain data exchange 2 Data exchange languages 2.1 Popular languages used for data exchange 2.2 XML for data exchange 2.3 YAML for data exchange 2.4 REBOL for data exchange 2.5 Gellish for data exchange 3 See also 4 References Single-domain data exchange[edit] In some domains, a few dozen different source and target schema (proprietary data formats) may exist. An "exchange" or "interchange format" is often developed for a single domain, and then necessary routines (mappings) are written to (indirectly) transform/translate each and every source schema to each and every target schema by using the interchange format as an intermediate step.[2] That requires a lot less work than writing and debugging the hundreds of different routines that would be required to directly translate each and every source schema directly to each and every target schema. Examples of these transformative interchange formats include: Standard Interchange Format for geospatial data;[3] Data Interchange Format for spreadsheet data;[4] Open Document Format for spreadsheets, charts, presentations and word processing documents;[5] GPS eXchange Format or Keyhole Markup Language for describing GPS data;[6][7] and GDSII for integrated circuit layout.[8] Data exchange languages[edit] See also: Modeling language A data interchange (or exchange) language/format is a language that is domain-independent and can be used for data from any kind of discipline.[9] They have "evolved from being markup and display-oriented to further support the encoding of metadata that describes the structural attributes of the information."[10] Practice has shown that certain types of formal languages are better suited for this task than others, since their specification is driven by a formal process instead of particular software implementation needs. For example, XML is a markup language that was designed to enable the creation of dialects (the definition of domain-specific sublanguages).[11] However, it does not contain domain-specific dictionaries or fact types. Beneficial to a reliable data exchange is the availability of standard dictionaries-taxonomies and ru.itis.search.tools libraries such as parsers, schema validators, and transformation ru.itis.search.tools.[citation needed] Popular languages used for data exchange[edit] The following is a partial list of popular generic languages used for data exchange in multiple domains. Schemas Flexible Semantic verification Dictionary Information Model Synonyms and homonyms Dialecting Web standard Transformations Lightweight Human readable Compatibility RDF Yes[1] Yes Yes Yes Yes Yes Yes Yes Yes Yes Partial Subset of Semantic web XML Yes[2] Yes No No No No Yes Yes Yes No Yes subset of SGML, HTML Atom Yes Un­known Un­known Un­known No Un­known Yes Yes Yes No No XML dialect JSON No Un­known Un­known Un­known No Un­known No Yes No Yes Yes subset of YAML YAML No[3] Un­known Un­known Un­known No Un­known No No No[3] Yes Yes[4] superset of JSON REBOL Yes[7] Yes No Yes No Yes Yes No Yes[7] Yes Yes[5] Gellish Yes Yes Yes Yes[8] No Yes Yes ISO No Yes Partial[6] SQL, RDF/XML, OWL Nomenclature Schemas - Whether the language definition is available in a computer interpretable form Flexible - Whether the language enables extension of the semantic expression capabilities without modifying the schema Semantic verification - Whether the language definition enables semantic verification of the correctness of expressions in the language Dictionary-Taxonomy - Whether the language includes a dictionary and a taxonomy (subtype-supertype hierarchy) of concepts with inheritance Synonyms and homonyms - Whether the language includes and supports the use of synonyms and homonyms in the expressions Dialecting - Whether the language definition is available in multiple natural languages or dialects Web or ISO standard - Organization that endorsed the language as a standard Transformations - Whether the language includes a translation to other standards Lightweight - Whether a lightweight version is available, in addition to a full version Human-readable - Whether expressions in the language are human-readable (readable by humans without training)[12] Compatibility - Which other ru.itis.search.tools are possible to use or required when using the language Notes: ^ RDF is a schema-flexible language. ^ The schema of XML contains a very limited grammar and vocabulary. ^ Available as an extension. ^ In the default format, not the compact syntax. ^ The syntax is fairly simple (the language was designed to be human-readable); the dialects may require domain knowledge. ^ The standardized fact types are denoted by standardized English phrases, which interpretation and use needs some training. ^ The Parse dialect is used to specify, validate, and transform dialects. ^ The English version includes a Gellish English Dictionary-Taxonomy that also includes standardized fact types (= kinds of relations). XML for data exchange[edit] The popularity of XML for data exchange on the World Wide Web has several reasons. First of all, it is closely related to the preexisting standards Standard Generalized Markup Language (SGML) and Hypertext Markup Language (HTML), and as such a parser written to support these two languages can be easily extended to support XML as well. For example, XHTML has been defined as a format that is formal XML, but understood correctly by most (if not all) HTML parsers.[11] YAML for data exchange[edit] YAML is a language that was designed to be human-readable (and as such to be easy to edit with any standard text editor). Its notion often is similar to reStructuredText or a Wiki syntax, who also try to be readable both by humans and computers. YAML 1.2 also includes a shorthand notion that is compatible with JSON, and as such any JSON document is also valid YAML; this however does not hold the other way.[13] REBOL for data exchange[edit] REBOL is a language that was designed to be human-readable and easy to edit using any standard text editor. To achieve that it uses a simple free-form syntax with minimal punctuation and a rich set of datatypes. REBOL datatypes like URLs, emails, date and time values, tuples, strings, tags, etc. respect the common standards. REBOL is designed to not need any additional meta-language, being designed in a metacircular fashion. The metacircularity of the language is the reason why, e.g., the Parse dialect used (not exclusively) for definitions and transformations of REBOL dialects is also itself a dialect of REBOL.[14] REBOL was used as a source of inspiration for JSON.[15] Gellish for data exchange[edit] Gellish English is a formalized subset of natural English, which includes a simple grammar and a large extensible English Dictionary-Taxonomy that defines the general and domain specific terminology (terms for concepts), whereas the concepts are arranged in a subtype-supertype hierarchy (a taxonomy), which supports inheritance of knowledge and requirements. The Dictionary-Taxonomy also includes standardized fact types (also called relation types). The terms and relation types together can be used to create and interpret expressions of facts, knowledge, requirements and other information. Gellish can be used in combination with SQL, RDF/XML, OWL and various other meta-languages. The Gellish standard is a combination of ISO 10303-221 (AP221) and ISO 15926.[16] See also[edit] Atom (file format) Lightweight markup language RSS References[edit] ^ A. Doan, A. Halevy, and Z. Ives. "Principles of data integration", Morgan Kaufmann, 2012 pp. 276 ^ Arenas, M.; Barceló, P.; Libkin, L.; Murlak, F. (2014). Foundations of Data Exchange. Cambridge University Press. pp. 1–11. ISBN 9781107016163. Retrieved 25 May 2018. ^ Clancy, J.J. (2012). "Chapter 1: Directions for Engineering Data Exchange for Computer Aided Design and Manufacturing". In Wang, P.C.C. (ed.). Advances in CAD/CAM: Case Studies. Springer Science & Business Media. pp. 1–36. ISBN 9781461328193. Retrieved 25 May 2018. ^ Kalish, C.E.; Mayer, M.F. (November 1981). "DIF: A format for data exchange between application programs". BYTE Magazine: 174. ^ "About ODF". OpenDoc Society. Retrieved 25 May 2018. ^ Zhu, X. (2016). GIS for Environmental Applications: A practical approach. Routledge. ISBN 9781134094509. Retrieved 25 May 2018. ^ "KML Reference". Google Inc. 21 January 2016. Retrieved 25 May 2018. ^ Martins, R.M.F.; Lourenço, N.C.C.; Horta, N.C.G. (2012). Generating Analog IC Layouts with LAYGEN II. Springer Science & Business Media. p. 34. ISBN 9783642331466. Retrieved 25 May 2018. ^ Billingsley, F.C. (1988). "General Data Interchange Language". ISPRS Archives. 27 (B3): 80–91. Retrieved 25 May 2018. The transformation routines will constitute a language and syntax which must be discipline and machine independent. ^ Nurseitov, N.; Paulson, M.; Reynolds, R.; Izurieta, C. (2009). "Comparison of JSON and XML Data Interchange Formats: A Case Study". Scenario: 157–162. ^ a b Lewis, J.; Moscovitz, M. (2009). AdvancED CSS. APress. pp. 5–6. ISBN 9781430219323. Retrieved 25 May 2018. ^ "human-readable". Oxford Dictionaries. Oxford University Press. Retrieved 29 May 2018. ^ Bendersky, E. (22 November 2008). "JSON is YAML, but YAML is not JSON". Eli Bendersky's website. Retrieved 29 May 2018. ^ Sassenrath, C. (2000). "The REBOL Scripting Language". Dr. Dobb's Journal. 25 (314): 64–8. Retrieved 29 May 2018. ^ Sassenrath, C. (13 December 2012). "On JSON and REBOL". REBOL.com. Retrieved 29 May 2018. ^ van Renssen, A.; Vermaas, P.E.; Zwart, S.D. (2007). "A Taxonomy of Functions in Gellish English". Proceedings from the International Conference on Engineering Design 2007: DS42_P_230. Retrieved 29 May 2018. v t e Data exchange formats Human readable formats Atom JSON Property list RDF Rebol XML YAML Binary formats AMF ASN.1 SMI Avro Base64 BSON CBOR FlatBuffers MessagePack Property list Protocol Buffers Thrift UAVCAN DSDL XDR Retrieved from "https://en.wikipedia.org/w/index.php?title=Data_exchange&oldid=1002575403" Categories: Data management Hidden categories: Articles with short description Short description is different from Wikidata All articles with unsourced statements Articles with unsourced statements from May 2018 Navigation menu Personal ru.itis.search.tools Not logged in Talk Contributions Create account Log in Namespaces Article Talk Variants Views Read Edit View history More Search Navigation Main page Contents Current events Random article About Wikipedia Contact us Donate Contribute Help Learn to edit Community portal Recent changes Upload file Tools What links here Related changes Upload file Special pages Permanent link Page information Cite this page Wikidata item Print/export Download as PDF Printable version Languages Deutsch 한국어 ไทย 中文 Edit links This page was last edited on 25 January 2021, at 02:20 (UTC). Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. Privacy policy About Wikipedia Disclaimers Contact Wikipedia Mobile view Developers Statistics Cookie statement
